[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gridporter"
version = "0.1.0"
description = "Intelligent spreadsheet ingestion framework with automatic table detection"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "GridPorter Contributors"},
]
keywords = ["excel", "csv", "table-detection", "data-extraction", "spreadsheet"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
]

dependencies = [
    "pydantic>=2.0,<3.0",
    "openai-agents-python>=0.2.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
    "pandas>=2.0.0",
    "numpy>=2.3.0",
    "scikit-image>=0.25.0",
    "python-magic>=0.4.27",
    "chardet>=5.0.0",
    "aiofiles>=23.0.0",
    "rich>=13.0.0",  # For nice CLI output
    "click>=8.1.0",  # For CLI
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.12.0",
    "mypy>=1.17.0",
    "pre-commit>=3.3.0",
    "ipykernel>=6.25.0",  # For Jupyter examples
]

visualization = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/gridporter"
Documentation = "https://gridporter.readthedocs.io"
Repository = "https://github.com/yourusername/gridporter"
Issues = "https://github.com/yourusername/gridporter/issues"

[project.scripts]
gridporter = "gridporter.cli:main"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    "/examples",
    "/.gitignore",
    "/.pre-commit-config.yaml",
    "/Makefile",
]

[tool.hatch.build.targets.wheel]
packages = ["src/gridporter"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "xlrd.*",
    "sklearn.*",
    "skimage.*",
    "magic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=gridporter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/gridporter"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]